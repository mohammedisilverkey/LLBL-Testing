//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.5.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ViewModel.Persistence
{
	/// <summary>Static class for (extension) methods for fetching and projecting instances of ViewModel.DtoClasses.ManagerEmployeeViewModel from the entity model.</summary>
	public static partial class ManagerEmployeeViewModelPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<practice.EntityClasses.ManagerEntity, ViewModel.DtoClasses.ManagerEmployeeViewModel>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<practice.EntityClasses.ManagerEntity, ViewModel.DtoClasses.ManagerEmployeeViewModel> _compiledProjector = CreateProjectionFunc().Compile();
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static ManagerEmployeeViewModelPersistence() { }
	
		/// <summary>Extension method which produces a projection to ViewModel.DtoClasses.ManagerEmployeeViewModel which instances are projected from the 
		/// results of the specified baseQuery, which returns practice.EntityClasses.ManagerEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve ViewModel.DtoClasses.ManagerEmployeeViewModel instances</returns>
		public static IQueryable<ViewModel.DtoClasses.ManagerEmployeeViewModel> ProjectToManagerEmployeeViewModel(this IQueryable<practice.EntityClasses.ManagerEntity> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}
		
		/// <summary>Extension method which produces a projection to ViewModel.DtoClasses.ManagerEmployeeViewModel which instances are projected from the
		/// practice.EntityClasses.ManagerEntity entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>practice.EntityClasses.ManagerEntity instance created from the specified entity instance</returns>
		public static ViewModel.DtoClasses.ManagerEmployeeViewModel ProjectToManagerEmployeeViewModel(this practice.EntityClasses.ManagerEntity entity)
		{
			return _compiledProjector(entity);
		}
		
		private static System.Linq.Expressions.Expression<Func<practice.EntityClasses.ManagerEntity, ViewModel.DtoClasses.ManagerEmployeeViewModel>> CreateProjectionFunc()
		{
			return p__0 => new ViewModel.DtoClasses.ManagerEmployeeViewModel()
			{
				DepartmentId = p__0.DepartmentId,
				Employees = p__0.Employees.Select(p__1 => new ViewModel.DtoClasses.ManagerEmployeeViewModelTypes.Employee()
				{
					Id = p__1.Id,
					ManagerId = p__1.ManagerId,
					Name = p__1.Name,
				}).ToList(),
				Id = p__0.Id,
				Name = p__0.Name,
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_ManagerEmployeeViewModel 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
		}
	}
}

