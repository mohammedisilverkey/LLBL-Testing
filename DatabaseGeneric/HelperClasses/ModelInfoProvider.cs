//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using practice.FactoryClasses;
using practice.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace practice.HelperClasses
{
	/// <summary>Singleton implementation of the ModelInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
	public static class ModelInfoProviderSingleton
	{
		private static readonly IModelInfoProvider _providerInstance = new ModelInfoProviderCore();

		/// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
		static ModelInfoProviderSingleton()	{ }

		/// <summary>Gets the singleton instance of the ModelInfoProviderCore</summary>
		/// <returns>Instance of the FieldInfoProvider.</returns>
		public static IModelInfoProvider GetInstance()
		{
			return _providerInstance;
		}
	}

	/// <summary>Actual implementation of the ModelInfoProvider.</summary>
	internal class ModelInfoProviderCore : ModelInfoProviderBase
	{
		/// <summary>Initializes a new instance of the <see cref="ModelInfoProviderCore"/> class.</summary>
		internal ModelInfoProviderCore()
		{
			Init();
		}

		/// <summary>Method which initializes the internal datastores.</summary>
		private void Init()
		{
			this.InitClass();
			InitDepartmentEntityInfo();
			InitEmployeeEntityInfo();
			InitManagerEntityInfo();
			this.BuildInternalStructures();
		}

		/// <summary>Inits DepartmentEntity's info objects</summary>
		private void InitDepartmentEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(DepartmentFieldIndex), "DepartmentEntity");
			this.AddElementFieldInfo("DepartmentEntity", "DepartmentName", typeof(System.String), false, false, false, false,  (int)DepartmentFieldIndex.DepartmentName, 60, 0, 0);
			this.AddElementFieldInfo("DepartmentEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)DepartmentFieldIndex.Id, 0, 0, 10);
		}

		/// <summary>Inits EmployeeEntity's info objects</summary>
		private void InitEmployeeEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(EmployeeFieldIndex), "EmployeeEntity");
			this.AddElementFieldInfo("EmployeeEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)EmployeeFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("EmployeeEntity", "ManagerId", typeof(Nullable<System.Int32>), false, true, false, true,  (int)EmployeeFieldIndex.ManagerId, 0, 0, 10);
			this.AddElementFieldInfo("EmployeeEntity", "Name", typeof(System.String), false, false, false, false,  (int)EmployeeFieldIndex.Name, 60, 0, 0);
		}

		/// <summary>Inits ManagerEntity's info objects</summary>
		private void InitManagerEntityInfo()
		{
			this.AddFieldIndexEnumForElementName(typeof(ManagerFieldIndex), "ManagerEntity");
			this.AddElementFieldInfo("ManagerEntity", "DepartmentId", typeof(Nullable<System.Int32>), false, true, false, true,  (int)ManagerFieldIndex.DepartmentId, 0, 0, 10);
			this.AddElementFieldInfo("ManagerEntity", "Id", typeof(System.Int32), true, false, true, false,  (int)ManagerFieldIndex.Id, 0, 0, 10);
			this.AddElementFieldInfo("ManagerEntity", "Name", typeof(System.String), false, false, false, false,  (int)ManagerFieldIndex.Name, 60, 0, 0);
		}
	}
}